{"remainingRequest":"D:\\web相关\\small project\\TuBiaoKu-ing\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\web相关\\small project\\TuBiaoKu-ing\\src\\components\\Chart Library\\02-柱图\\02-多柱图\\StackDuoZhuTu.vue?vue&type=style&index=0&id=55fd8c3c&lang=less&scoped=true","dependencies":[{"path":"D:\\web相关\\small project\\TuBiaoKu-ing\\src\\components\\Chart Library\\02-柱图\\02-多柱图\\StackDuoZhuTu.vue","mtime":1693565825956},{"path":"D:\\web相关\\small project\\TuBiaoKu-ing\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\web相关\\small project\\TuBiaoKu-ing\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\web相关\\small project\\TuBiaoKu-ing\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\web相关\\small project\\TuBiaoKu-ing\\node_modules\\less-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\web相关\\small project\\TuBiaoKu-ing\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\web相关\\small project\\TuBiaoKu-ing\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouY2hhcnRCb3ggew0KICBwb3NpdGlvbjogcmVsYXRpdmU7DQogIC5sZWd0aCB7DQogICAgd2lkdGg6IDEwMCU7DQogICAgcG9zaXRpb246IGFic29sdXRlOw0KICAgIGxlZnQ6IDMyMXB4Ow0KICAgIHRvcDogMTBweDsNCiAgICBsaSB7DQogICAgICBmbG9hdDogbGVmdDsNCiAgICAgIC8vIHdpZHRoOiAyMDBweDsNCiAgICAgIG1hcmdpbi1yaWdodDogMjBweDsNCiAgICAgIGhlaWdodDogMjBweDsNCiAgICAgIGgzIHsNCiAgICAgICAgZmxvYXQ6IGxlZnQ7DQogICAgICAgIHdpZHRoOiAxNHB4Ow0KICAgICAgICBoZWlnaHQ6IDRweDsNCiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmVkOw0KICAgICAgICBtYXJnaW4tdG9wOiAxMHB4Ow0KICAgICAgfQ0KICAgICAgc3BhbiB7DQogICAgICAgIG1hcmdpbi1sZWZ0OiA3cHg7DQogICAgICAgIGZvbnQtc2l6ZTogMTRweDsNCiAgICAgICAgZm9udC1mYW1pbHk6ICdQaW5nRmFuZyc7DQogICAgICAgIGNvbG9yOiAjYmZlYmZmOw0KICAgICAgfQ0KICAgIH0NCiAgfQ0KfQ0K"},{"version":3,"sources":["StackDuoZhuTu.vue"],"names":[],"mappings":";AAqeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"StackDuoZhuTu.vue","sourceRoot":"src/components/Chart Library/02-柱图/02-多柱图","sourcesContent":["<template>\r\n  <div class=\"chartBox\">\r\n    <div class=\"myChart\" ref=\"myChart\" :style=\"{ width: width, height: height }\"></div>\r\n    <ul class=\"legth\" :style=\"{ top: legTop, left: legLeft }\" v-if=\"legIsShow && rowData.length\">\r\n      <li v-for=\"(item, i) in legthWZ\" :key=\"i\">\r\n        <h3 :style=\"{ backgroundColor: legthColor[i] }\"></h3>\r\n        <span>{{ item }}</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: 'pieGeRenNanDing',\r\n  props: {\r\n    rowData: {\r\n      type: Array,\r\n      default: () => {\r\n        return [\r\n          {\r\n            name: '0601',\r\n            value: '10',\r\n            item: '30',\r\n            val: '20',\r\n          },\r\n          {\r\n            name: '0602',\r\n            value: '20',\r\n            item: '30',\r\n            val: '40',\r\n          },\r\n          {\r\n            name: '0603',\r\n            value: '50',\r\n            item: '30',\r\n            val: '10',\r\n          },\r\n          {\r\n            name: '0604',\r\n            value: '20',\r\n            item: '30',\r\n            val: '40',\r\n          },\r\n          {\r\n            name: '0605',\r\n            value: '30',\r\n            item: '45',\r\n            val: '32',\r\n          },\r\n          {\r\n            name: '0606',\r\n            value: '45',\r\n            item: '32',\r\n            val: '10',\r\n          },\r\n          {\r\n            name: '0607',\r\n            value: '12',\r\n            item: '45',\r\n            val: '21',\r\n          },\r\n          {\r\n            name: '0608',\r\n            value: '23',\r\n            item: '23',\r\n            val: '45',\r\n          },\r\n        ];\r\n      },\r\n    },\r\n    h3Style: {\r\n      type: Object,\r\n      default: () => {\r\n        return {};\r\n      },\r\n    },\r\n    barColor: {\r\n      type: Array,\r\n      default: () => {\r\n        return ['rgba(137,170,255,1)', 'rgba(137,170,255,.9)', 'rgba(244,150,170,1)', 'rgba(244,150,170,0)', '#f4a22d', '#ff0'];\r\n      },\r\n    },\r\n    legthColor: {\r\n      type: Array,\r\n      default: () => {\r\n        return ['#F496AA', '#89AAFF'];\r\n      },\r\n    },\r\n    legthWZ: {\r\n      type: Array,\r\n      default: () => {\r\n        return ['正常', '违章', '总数'];\r\n      },\r\n    },\r\n    unit: {\r\n      type: String,\r\n      default: () => {\r\n        return '单位:个';\r\n      },\r\n    },\r\n    barWidth: {\r\n      type: String,\r\n      default: () => {\r\n        return '15';\r\n      },\r\n    },\r\n    width: {\r\n      type: String,\r\n      default: () => {\r\n        return '412px';\r\n      },\r\n    },\r\n    height: {\r\n      type: String,\r\n      default: () => {\r\n        return '188px';\r\n      },\r\n    },\r\n    legTop: {\r\n      type: String,\r\n      default: () => {\r\n        return '10px';\r\n      },\r\n    },\r\n    legLeft: {\r\n      type: String,\r\n      default: () => {\r\n        return '200px';\r\n      },\r\n    },\r\n    legIsShow: {\r\n      type: Boolean,\r\n      default: () => {\r\n        return false;\r\n      },\r\n    },\r\n    labelShow: {\r\n      type: Boolean,\r\n      default: () => {\r\n        return false;\r\n      },\r\n    },\r\n    showUnit: {\r\n      type: Boolean,\r\n      default: () => {\r\n        return true;\r\n      },\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      Xdata: [],\r\n      Ydata: [],\r\n      valTwo: [],\r\n      valThree: [],\r\n      valFour: [],\r\n      setTime: null,\r\n      chartInst: null,\r\n    };\r\n  },\r\n  mounted() {\r\n    // this.getData();\r\n    if (this.rowData && this.rowData.length > 0) {\r\n      this.rowData.forEach((item) => {\r\n        this.Xdata.push(item.name);\r\n        this.Ydata.push(item.value);\r\n        this.valTwo.push(item.item);\r\n        this.valThree.push(item.val);\r\n        this.valFour.push(item.four);\r\n      });\r\n    } else {\r\n      this.noDataShow();\r\n      return;\r\n    }\r\n    this.drawWidth();\r\n    this.tooltipShuffling();\r\n  },\r\n  methods: {\r\n    drawWidth() {\r\n      // 基于准备好的dom，初始化echarts实例\r\n      this.chartInst = this.$echarts.init(this.$refs.myChart);\r\n      this.chartInst.setOption({\r\n        color: '#00BFFF',\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'line',\r\n            label: {\r\n              backgroundColor: '#6a7985',\r\n            },\r\n          },\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true,\r\n        },\r\n        legend: {\r\n          icon: 'rect',\r\n          data: this.legthWZ,\r\n          right: '5%',\r\n          selectedMode: true,\r\n          borderWidth: 0,\r\n          padding: 0,\r\n          itemGap: 18,\r\n          itemWidth: 17,\r\n          itemHeight: 7,\r\n          top: 30,\r\n          textStyle: {\r\n            color: '#E5FFFF',\r\n            fontFamily: '微软雅黑',\r\n            fontSize: 14,\r\n          },\r\n        },\r\n        xAxis: [\r\n          {\r\n            type: 'category',\r\n            data: this.Xdata,\r\n            axisTick: {\r\n              alignWithLabel: true,\r\n            },\r\n            axisLabel: {\r\n              //x轴文字的配置\r\n              textStyle: {\r\n                color: '#BFEBFF',\r\n                fontSize: 16,\r\n                fontFamily: 'PingFang',\r\n              },\r\n            },\r\n            axisLine: {\r\n              lineStyle: {\r\n                color: '#9FAFB5',\r\n                width: 1.2, //这里是为了突出显示加上的\r\n              },\r\n            },\r\n          },\r\n        ],\r\n        yAxis: [\r\n          {\r\n            name: `${this.unit}`,\r\n            position: 'left',\r\n            type: 'value',\r\n            nameTextStyle: {\r\n              show: this.showUnit,\r\n              color: '#BFEBFF',\r\n              fontSize: 16,\r\n              padding: 2,\r\n              fontFamily: 'PingFang',\r\n            },\r\n            axisLabel: {\r\n              //y轴文字的配置\r\n              textStyle: {\r\n                color: '#BFEBFF',\r\n                fontSize: 16,\r\n                fontFamily: 'Helvetica',\r\n              },\r\n            },\r\n            splitNumber: 5,\r\n            // 设置y轴线条的粗细\r\n            splitLine: {\r\n              show: true,\r\n              lineStyle: {\r\n                color: [' rgba(255,255,255,0.08)'],\r\n                width: 1,\r\n                type: 'solid',\r\n              },\r\n            },\r\n            axisLine: {\r\n              lineStyle: {\r\n                color: '#9FAFB5',\r\n                width: 2, //这里是为了突出显示加上的\r\n              },\r\n            },\r\n            splitArea: {\r\n              show: true,\r\n              areaStyle: {\r\n                color: [' rgba(255,255,255,0.08)', 'rgba(0,0,0,0)'],\r\n              },\r\n            },\r\n          },\r\n        ],\r\n        series: [\r\n          {\r\n            stack: true,\r\n            name: this.legthWZ[0],\r\n            type: 'bar',\r\n            barWidth: this.barWidth,\r\n            data: this.Ydata,\r\n            itemStyle: {\r\n              normal: {\r\n                color: new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                  {\r\n                    offset: 0,\r\n                    color: this.barColor[0],\r\n                  },\r\n                  {\r\n                    offset: 1,\r\n                    color: this.barColor[1],\r\n                  },\r\n                ]),\r\n                barBorderRadius: 0,\r\n              },\r\n            },\r\n            label: {\r\n              show: this.labelShow,\r\n              formatter: '{c} ',\r\n              color: '#00FFFF',\r\n              offset: [0, 1],\r\n              position: 'top',\r\n              fontFamily: '腾祥智黑简',\r\n              fontSize: 18,\r\n            },\r\n          },\r\n          {\r\n            stack: true,\r\n\r\n            name: this.legthWZ[1],\r\n            type: 'bar',\r\n            barWidth: this.barWidth,\r\n            data: this.valTwo,\r\n            itemStyle: {\r\n              normal: {\r\n                color: new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                  {\r\n                    offset: 0,\r\n                    color: this.barColor[2],\r\n                  },\r\n                  {\r\n                    offset: 1,\r\n                    color: this.barColor[3],\r\n                  },\r\n                ]),\r\n                barBorderRadius: 0,\r\n              },\r\n            },\r\n            label: {\r\n              position: 'top',\r\n              show: this.labelShow,\r\n              formatter: '{c} ',\r\n              color: '#00FFFF',\r\n              offset: [0, 1],\r\n              fontFamily: '腾祥智黑简',\r\n              fontSize: 18,\r\n            },\r\n          },\r\n          {\r\n            name: this.legthWZ[2],\r\n            type: 'line',\r\n            barWidth: this.barWidth,\r\n            data: this.valThree,\r\n            color: this.barColor[4],\r\n            // itemStyle: {\r\n            //   normal: {\r\n            //     color: new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n            //       {\r\n            //         offset: 0,\r\n            //         color: this.barColor[4]\r\n            //       },\r\n            //       {\r\n            //         offset: 1,\r\n            //         color: this.barColor[5]\r\n            //       }\r\n            //     ]),\r\n            //     barBorderRadius: 0\r\n            //   }\r\n            // },\r\n          },\r\n          {\r\n            name: this.legthWZ[3],\r\n            type: 'bar',\r\n            barWidth: this.barWidth,\r\n            data: this.valFour,\r\n            itemStyle: {\r\n              normal: {\r\n                color: new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                  {\r\n                    offset: 0,\r\n                    color: this.barColor[6],\r\n                  },\r\n                  {\r\n                    offset: 1,\r\n                    color: this.barColor[7],\r\n                  },\r\n                ]),\r\n                barBorderRadius: 0,\r\n              },\r\n            },\r\n            label: {\r\n              position: 'top',\r\n              show: this.labelShow,\r\n              formatter: '{c} ',\r\n              color: '#00FFFF',\r\n              offset: [0, 1],\r\n              fontFamily: '腾祥智黑简',\r\n              fontSize: 18,\r\n            },\r\n          },\r\n        ],\r\n      });\r\n      //设置默认选中高亮部分\r\n      this.chartInst.dispatchAction({\r\n        type: 'downplay',\r\n        seriesIndex: 0,\r\n        dataIndex: 0,\r\n      }); //鼠标进\r\n    },\r\n    tooltipShuffling() {\r\n      clearInterval(this.setTime);\r\n      var currentIndex = -1;\r\n      this.setTime = setInterval(() => {\r\n        var dataLen = this.Ydata.length;\r\n        // 取消之前高亮的图形\r\n        this.chartInst.dispatchAction({\r\n          type: 'downplay',\r\n          seriesIndex: 0, //表示series中的第几个data数据循环展示\r\n          dataIndex: currentIndex,\r\n        });\r\n        currentIndex = (currentIndex + 1) % dataLen; //+1表示每次跳转一个\r\n        this.chartInst.dispatchAction({\r\n          type: 'showTip',\r\n          seriesIndex: 0,\r\n          dataIndex: currentIndex,\r\n        });\r\n        // 显示 tooltip\r\n        this.chartInst.dispatchAction({\r\n          type: 'showTip',\r\n          seriesIndex: 0,\r\n          dataIndex: currentIndex,\r\n        });\r\n      }, 2000);\r\n    },\r\n    noDataShow() {\r\n      this.chartInst = this.$echarts.init(this.$refs.myChart);\r\n      this.chartInst.setOption({\r\n        backgroundColor: 'rgba(255,255,255,.03)',\r\n        title: {\r\n          text: `暂无数据`,\r\n          show: true,\r\n          textStyle: {\r\n            align: 'center',\r\n            color: '#fff',\r\n            fontSize: 32,\r\n          },\r\n          top: 'center',\r\n          left: 'center',\r\n        },\r\n      });\r\n    },\r\n  },\r\n  beforeDestroy() {\r\n    clearInterval(this.setTime);\r\n    this.setTime = null;\r\n    this.chartInst.dispose();\r\n  },\r\n  watch: {\r\n    rowData: {\r\n      handler(val) {\r\n        if (!val.length) {\r\n          this.noDataShow();\r\n          return;\r\n        }\r\n        this.Xdata = [];\r\n        this.Ydata = [];\r\n        this.valTwo = [];\r\n        this.valThree = [];\r\n        this.valFour = [];\r\n\r\n        this.rowData.forEach((item) => {\r\n          this.Xdata.push(item.name);\r\n          this.Ydata.push(item.value);\r\n          this.valTwo.push(item.item);\r\n          this.valThree.push(item.val);\r\n          this.valFour.push(item.four);\r\n        });\r\n        this.tooltipShuffling();\r\n        this.drawWidth();\r\n      },\r\n      deep: true,\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.chartBox {\r\n  position: relative;\r\n  .legth {\r\n    width: 100%;\r\n    position: absolute;\r\n    left: 321px;\r\n    top: 10px;\r\n    li {\r\n      float: left;\r\n      // width: 200px;\r\n      margin-right: 20px;\r\n      height: 20px;\r\n      h3 {\r\n        float: left;\r\n        width: 14px;\r\n        height: 4px;\r\n        background-color: red;\r\n        margin-top: 10px;\r\n      }\r\n      span {\r\n        margin-left: 7px;\r\n        font-size: 14px;\r\n        font-family: 'PingFang';\r\n        color: #bfebff;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]}]}
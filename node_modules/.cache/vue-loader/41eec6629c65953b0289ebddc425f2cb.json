{"remainingRequest":"D:\\web相关\\small project\\github-图表库\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\web相关\\small project\\github-图表库\\src\\components\\Chart Library\\04-雷达图\\01-基础雷达图\\LeiDaBar.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\web相关\\small project\\github-图表库\\src\\components\\Chart Library\\04-雷达图\\01-基础雷达图\\LeiDaBar.vue","mtime":1711459561483},{"path":"D:\\web相关\\small project\\github-图表库\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\web相关\\small project\\github-图表库\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\web相关\\small project\\github-图表库\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\web相关\\small project\\github-图表库\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICdwaWVHZVJlbk5hbkRpbmcnLA0KICBwcm9wczogew0KICAgIHdpZHRoOiB7DQogICAgICB0eXBlOiBTdHJpbmcsDQogICAgICBkZWZhdWx0OiAnNTAwcHgnLA0KICAgIH0sDQogICAgaGVpZ2h0OiB7DQogICAgICB0eXBlOiBTdHJpbmcsDQogICAgICBkZWZhdWx0OiAnNTAwcHgnLA0KICAgIH0sDQogICAgcm93RGF0YTogew0KICAgICAgdHlwZTogT2JqZWN0LA0KICAgICAgZGVmYXVsdDogKCkgPT4gew0KICAgICAgICByZXR1cm4gew0KICAgICAgICAgIC8vIHNoYXBlOiAnY2lyY2xlJywNCiAgICAgICAgICBpbmRpY2F0b3I6IFsNCiAgICAgICAgICAgIHsgbmFtZTogJ+mUgOWUrid9LA0KICAgICAgICAgICAgeyBuYW1lOiAn566h55CGJyB9LA0KICAgICAgICAgICAgeyBuYW1lOiAn6LCD56CUJyB9LA0KICAgICAgICAgICAgeyBuYW1lOiAn5a6i5pyNJyB9LA0KICAgICAgICAgICAgeyBuYW1lOiAn56CU5Y+RJyB9LA0KICAgICAgICAgICAgeyBuYW1lOiAn5biC5Zy6JyB9DQogICAgICAgICAgXSwNCiAgICAgICAgICB2YWx1ZTogWzQyMDAsIDgwMDAsIDIwMDAsIDIzMDAsIDIwMDAsIDE4MDBdDQogICAgICAgIH07DQogICAgICB9DQogICAgfQ0KICB9LA0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICBzZXRUaW1lOiBudWxsLA0KICAgICAgbXlDaGFydDogbnVsbCwNCiAgICAgIGluaXRUaW1lcjogbnVsbA0KICAgIH07DQogIH0sDQogIG1vdW50ZWQoKSB7DQogICAgaWYgKA0KICAgICAgdGhpcy5yb3dEYXRhICYmDQogICAgICB0aGlzLnJvd0RhdGEuaW5kaWNhdG9yICYmDQogICAgICB0aGlzLnJvd0RhdGEuaW5kaWNhdG9yLmxlbmd0aCA+IDANCiAgICApIHsNCiAgICAgIGNvbnNvbGUubG9nKHRoaXMucm93RGF0YS5pbmRpY2F0b3IpOw0KICAgIH0NCiAgICB0aGlzLmxlaWRhZHJhdygpOw0KICAgIHRoaXMuaW5pdFRpbWVyID0gc2V0SW50ZXJ2YWwoKCkgPT4gew0KICAgICAgdGhpcy5teUNoYXJ0LmRpc3Bvc2UoKTsNCiAgICAgIHRoaXMubGVpZGFkcmF3KCk7DQogICAgfSwgMzAwMDApOw0KICB9LA0KICBtZXRob2RzOiB7DQogICAgbGVpZGFkcmF3KCkgew0KICAgICAgLy8g5Z+65LqO5YeG5aSH5aW955qEZG9t77yM5Yid5aeL5YyWZWNoYXJ0c+WunuS+iw0KICAgICAgdGhpcy5teUNoYXJ0ID0gdGhpcy4kZWNoYXJ0cy5pbml0KHRoaXMuJHJlZnMubXlDaGFydCk7DQogICAgICAvLyDnu5jliLblm77ooagNCiAgICAgIHRoaXMubXlDaGFydC5zZXRPcHRpb24oew0KICAgICAgICByYWRhcjogew0KICAgICAgICAgIG5hbWVHYXA6IDAsDQogICAgICAgICAgY2VudGVyOiBbJzU4JScsICc1MyUnXSwNCiAgICAgICAgICBuYW1lOiB7DQogICAgICAgICAgICB0ZXh0U3R5bGU6IHsNCiAgICAgICAgICAgICAgLy8gcGFkZGluZzogWzMsIDVdLA0KICAgICAgICAgICAgICBmb250U2l6ZTogMTUsDQogICAgICAgICAgICAgIGZhbWlseTogJ1BpbmdGYW5nJywNCiAgICAgICAgICAgICAgY29sb3I6ICcjZjhmOGY4JywNCiAgICAgICAgICAgICAgYm9yZGVyUmFkaXVzOiAxDQogICAgICAgICAgICB9DQogICAgICAgICAgfSwNCiAgICAgICAgICAvLyByYWRpdXM6IFs1NSwxMF0sIC8vIOWchueahOWNiuW+hO+8jOaVsOe7hOeahOesrOS4gOmhueaYr+WGheWNiuW+hO+8jOesrOS6jOmhueaYr+WkluWNiuW+hA0KICAgICAgICAgIHNwbGl0TnVtYmVyOiAzLA0KICAgICAgICAgIHNwbGl0TGluZTogew0KICAgICAgICAgICAgc2hvdzogdHJ1ZSwNCiAgICAgICAgICAgIGxpbmVTdHlsZTogew0KICAgICAgICAgICAgICB3aWR0aDogMiwNCiAgICAgICAgICAgICAgY29sb3I6IFsnI2ZmZicsICcjMTkzMzREJywgJyMxOTMzNEQnXSwNCiAgICAgICAgICAgICAgLy8gdHlwZTogImRhc2hlZFtdIiwNCiAgICAgICAgICAgICAgdHlwZTogJ3NvbGlkJw0KICAgICAgICAgICAgICAvLyAgdHlwZTogWyJzb2xpZCIsInNvbGlkIiwiZGFzaGVkIl0sDQoNCiAgICAgICAgICAgICAgLy8g5Zu+6KGo6IOM5pmv572R5qC857q/55qE6aKc6ImyDQogICAgICAgICAgICB9DQogICAgICAgICAgfSwNCiAgICAgICAgICBheGlzTGluZTogew0KICAgICAgICAgICAgbGluZVN0eWxlOiB7DQogICAgICAgICAgICAgIHdpZHRoOiAxLA0KICAgICAgICAgICAgICBjb2xvcjogJyNmZmYnLCAvLyDliIblibLnur8NCiAgICAgICAgICAgICAgdHlwZTogJ2Rhc2hlZCcNCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9LA0KICAgICAgICAgIHNwbGl0QXJlYTogew0KICAgICAgICAgICAgc2hvdzogZmFsc2UsDQogICAgICAgICAgICB0eXBlOiAnZGFzaGVkJywNCg0KICAgICAgICAgICAgYXJlYVN0eWxlOiB7DQogICAgICAgICAgICAgIGNvbG9yOiBbJ3JnYmEoMjQwLDI0MCwyNDAsMCknXSAvLyDlm77ooajog4zmma/nvZHmoLznmoTpopzoibINCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9LA0KICAgICAgICAgIGluZGljYXRvcjogdGhpcy5yb3dEYXRhLmluZGljYXRvcg0KICAgICAgICB9LA0KICAgICAgICB0b29sdGlwOiB7DQogICAgICAgICAgdHJpZ2dlcjogJ2F4aXMnDQogICAgICAgIH0sDQogICAgICAgIHNlcmllczogWw0KICAgICAgICAgIHsNCiAgICAgICAgICAgIHR5cGU6ICdyYWRhcicsDQogICAgICAgICAgICB0b29sdGlwOiB7DQogICAgICAgICAgICAgIHRyaWdnZXI6ICdpdGVtJw0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgIGFyZWFTdHlsZTogeyBub3JtYWw6IHt9IH0sDQogICAgICAgICAgICBpdGVtU3R5bGU6IHsNCiAgICAgICAgICAgICAgdHlwZTogJ2Rhc2hlZCcsDQogICAgICAgICAgICAgIC8vIOWNleS4quaLkOeCueagh+W/l+eahOagt+W8j+iuvue9ruOAgg0KICAgICAgICAgICAgICBub3JtYWw6IHsNCiAgICAgICAgICAgICAgICBib3JkZXJDb2xvcjogJyM1OUZGRkYnLA0KICAgICAgICAgICAgICAgIC8vIOaLkOeCueeahOaPj+i+ueminOiJsuOAglsgZGVmYXVsdDogJyMwMDAnIF0NCiAgICAgICAgICAgICAgICBib3JkZXJXaWR0aDogNQ0KICAgICAgICAgICAgICAgIC8vIOaLkOeCueeahOaPj+i+ueWuveW6pu+8jOm7mOiupOS4jeaPj+i+ueOAglsgZGVmYXVsdDogMCBdDQogICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICBsaW5lU3R5bGU6IHsNCiAgICAgICAgICAgICAgLy8g5Y2V6aG557q/5p2h5qC35byP44CCDQogICAgICAgICAgICAgIG5vcm1hbDogew0KICAgICAgICAgICAgICAgIGNvbG9yOiAnIzFGQzVDQycsDQogICAgICAgICAgICAgICAgb3BhY2l0eTogMC44IC8vIOWbvuW9oumAj+aYjuW6piwNCiAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgIGRhdGE6IFsNCiAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgIHZhbHVlOiB0aGlzLnJvd0RhdGEudmFsdWUsDQogICAgICAgICAgICAgICAgbmFtZTogJ+mihOeul+WIhumFjScsDQogICAgICAgICAgICAgICAgbGFiZWw6IHsNCiAgICAgICAgICAgICAgICAgIG5vcm1hbDogew0KICAgICAgICAgICAgICAgICAgICBzaG93OiB0cnVlLA0KICAgICAgICAgICAgICAgICAgICBmb3JtYXR0ZXI6IGZ1bmN0aW9uKHBhcmFtcykgew0KICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBwYXJhbXMudmFsdWU7DQogICAgICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgICAgIGZvbnRTaXplOiAnMjAnLA0KICAgICAgICAgICAgICAgICAgICBmb250RmFtaWx5OiAn6IW+56Wl5pm66buR566AJywNCiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IFsnMSUnLCAnMSUnXSwNCiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICcjZjhmOGY4JywNCiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAncmdiYSg1MSw1MSw1MSwwLjkpJw0KICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgXQ0KICAgICAgICAgIH0NCiAgICAgICAgXQ0KICAgICAgfSk7DQogICAgfSwNCiAgICB0b29sdGlwU2h1ZmZsaW5nKCkgew0KICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLnNldFRpbWUpOw0KICAgICAgdmFyIGN1cnJlbnRJbmRleCA9IC0xOw0KICAgICAgdGhpcy5zZXRUaW1lID0gc2V0SW50ZXJ2YWwoKCkgPT4gew0KICAgICAgICB2YXIgZGF0YUxlbiA9IHRoaXMucm93RGF0YS52YWx1ZS5sZW5ndGg7DQogICAgICAgIC8vIC8vIOWPlua2iOS5i+WJjemrmOS6rueahOWbvuW9og0KICAgICAgICAvLyB0aGlzLm15Q2hhcnQuZGlzcGF0Y2hBY3Rpb24oew0KICAgICAgICAvLyAgIHR5cGU6ICJkb3ducGxheSIsDQogICAgICAgIC8vICAgc2VyaWVzSW5kZXg6IDAsIC8v6KGo56S6c2VyaWVz5Lit55qE56ys5Yeg5LiqZGF0YeaVsOaNruW+queOr+Wxleekug0KICAgICAgICAvLyAgIGRhdGFJbmRleDogY3VycmVudEluZGV4DQogICAgICAgIC8vIH0pOw0KICAgICAgICBjdXJyZW50SW5kZXggPSAoY3VycmVudEluZGV4ICsgMSkgJSBkYXRhTGVuOyAvLysx6KGo56S65q+P5qyh6Lez6L2s5LiA5LiqDQogICAgICAgIHRoaXMubXlDaGFydC5kaXNwYXRjaEFjdGlvbih7DQogICAgICAgICAgdHlwZTogJ3Nob3dUaXAnLA0KICAgICAgICAgIHNlcmllc0luZGV4OiAwLA0KICAgICAgICAgIGRhdGFJbmRleDogY3VycmVudEluZGV4DQogICAgICAgIH0pOw0KICAgICAgICAvLyDmmL7npLogdG9vbHRpcA0KICAgICAgICB0aGlzLm15Q2hhcnQuZGlzcGF0Y2hBY3Rpb24oew0KICAgICAgICAgIHR5cGU6ICdoaWdobGlnaHQnLA0KICAgICAgICAgIHNlcmllc0luZGV4OiAwLA0KICAgICAgICAgIGRhdGFJbmRleDogY3VycmVudEluZGV4DQogICAgICAgIH0pOw0KICAgICAgfSwgMzAwMCk7DQogICAgfQ0KICB9LA0KICB3YXRjaDogew0KICAgIHJvd0RhdGE6IHsNCiAgICAgIGhhbmRsZXIoKSB7DQogICAgICAgIHRoaXMubXlDaGFydCAmJiB0aGlzLm15Q2hhcnQuZGlzcG9zZSgpOw0KICAgICAgICB0aGlzLmxlaWRhZHJhdygpOw0KICAgICAgfQ0KICAgIH0NCiAgfQ0KfTsNCg=="},{"version":3,"sources":["LeiDaBar.vue"],"names":[],"mappingsfile":"LeiDaBar.vue","sourceRoot":"src/components/Chart Library/04-雷达图/01-基础雷达图","sourcesContent":["<template>\r\n  <div class=\"chartBox\">\r\n    <div class=\"myChart\" ref=\"myChart\" :style=\"{ width: width, height: height }\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'pieGeRenNanDing',\r\n  props: {\r\n    width: {\r\n      type: String,\r\n      default: '500px',\r\n    },\r\n    height: {\r\n      type: String,\r\n      default: '500px',\r\n    },\r\n    rowData: {\r\n      type: Object,\r\n      default: () => {\r\n        return {\r\n          // shape: 'circle',\r\n          indicator: [\r\n            { name: '销售'},\r\n            { name: '管理' },\r\n            { name: '调研' },\r\n            { name: '客服' },\r\n            { name: '研发' },\r\n            { name: '市场' }\r\n          ],\r\n          value: [4200, 8000, 2000, 2300, 2000, 1800]\r\n        };\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      setTime: null,\r\n      myChart: null,\r\n      initTimer: null\r\n    };\r\n  },\r\n  mounted() {\r\n    if (\r\n      this.rowData &&\r\n      this.rowData.indicator &&\r\n      this.rowData.indicator.length > 0\r\n    ) {\r\n      console.log(this.rowData.indicator);\r\n    }\r\n    this.leidadraw();\r\n    this.initTimer = setInterval(() => {\r\n      this.myChart.dispose();\r\n      this.leidadraw();\r\n    }, 30000);\r\n  },\r\n  methods: {\r\n    leidadraw() {\r\n      // 基于准备好的dom，初始化echarts实例\r\n      this.myChart = this.$echarts.init(this.$refs.myChart);\r\n      // 绘制图表\r\n      this.myChart.setOption({\r\n        radar: {\r\n          nameGap: 0,\r\n          center: ['58%', '53%'],\r\n          name: {\r\n            textStyle: {\r\n              // padding: [3, 5],\r\n              fontSize: 15,\r\n              family: 'PingFang',\r\n              color: '#f8f8f8',\r\n              borderRadius: 1\r\n            }\r\n          },\r\n          // radius: [55,10], // 圆的半径，数组的第一项是内半径，第二项是外半径\r\n          splitNumber: 3,\r\n          splitLine: {\r\n            show: true,\r\n            lineStyle: {\r\n              width: 2,\r\n              color: ['#fff', '#19334D', '#19334D'],\r\n              // type: \"dashed[]\",\r\n              type: 'solid'\r\n              //  type: [\"solid\",\"solid\",\"dashed\"],\r\n\r\n              // 图表背景网格线的颜色\r\n            }\r\n          },\r\n          axisLine: {\r\n            lineStyle: {\r\n              width: 1,\r\n              color: '#fff', // 分割线\r\n              type: 'dashed'\r\n            }\r\n          },\r\n          splitArea: {\r\n            show: false,\r\n            type: 'dashed',\r\n\r\n            areaStyle: {\r\n              color: ['rgba(240,240,240,0)'] // 图表背景网格的颜色\r\n            }\r\n          },\r\n          indicator: this.rowData.indicator\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        series: [\r\n          {\r\n            type: 'radar',\r\n            tooltip: {\r\n              trigger: 'item'\r\n            },\r\n            areaStyle: { normal: {} },\r\n            itemStyle: {\r\n              type: 'dashed',\r\n              // 单个拐点标志的样式设置。\r\n              normal: {\r\n                borderColor: '#59FFFF',\r\n                // 拐点的描边颜色。[ default: '#000' ]\r\n                borderWidth: 5\r\n                // 拐点的描边宽度，默认不描边。[ default: 0 ]\r\n              }\r\n            },\r\n            lineStyle: {\r\n              // 单项线条样式。\r\n              normal: {\r\n                color: '#1FC5CC',\r\n                opacity: 0.8 // 图形透明度,\r\n              }\r\n            },\r\n            data: [\r\n              {\r\n                value: this.rowData.value,\r\n                name: '预算分配',\r\n                label: {\r\n                  normal: {\r\n                    show: true,\r\n                    formatter: function(params) {\r\n                      return params.value;\r\n                    },\r\n                    fontSize: '20',\r\n                    fontFamily: '腾祥智黑简',\r\n                    position: ['1%', '1%'],\r\n                    color: '#f8f8f8',\r\n                    backgroundColor: 'rgba(51,51,51,0.9)'\r\n                  }\r\n                }\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      });\r\n    },\r\n    tooltipShuffling() {\r\n      clearInterval(this.setTime);\r\n      var currentIndex = -1;\r\n      this.setTime = setInterval(() => {\r\n        var dataLen = this.rowData.value.length;\r\n        // // 取消之前高亮的图形\r\n        // this.myChart.dispatchAction({\r\n        //   type: \"downplay\",\r\n        //   seriesIndex: 0, //表示series中的第几个data数据循环展示\r\n        //   dataIndex: currentIndex\r\n        // });\r\n        currentIndex = (currentIndex + 1) % dataLen; //+1表示每次跳转一个\r\n        this.myChart.dispatchAction({\r\n          type: 'showTip',\r\n          seriesIndex: 0,\r\n          dataIndex: currentIndex\r\n        });\r\n        // 显示 tooltip\r\n        this.myChart.dispatchAction({\r\n          type: 'highlight',\r\n          seriesIndex: 0,\r\n          dataIndex: currentIndex\r\n        });\r\n      }, 3000);\r\n    }\r\n  },\r\n  watch: {\r\n    rowData: {\r\n      handler() {\r\n        this.myChart && this.myChart.dispose();\r\n        this.leidadraw();\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>"]}]}
{"remainingRequest":"D:\\web相关\\small project\\TuBiaoKu-ing\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\web相关\\small project\\TuBiaoKu-ing\\src\\components\\Chart Library\\02-柱图\\09-蝴蝶柱图\\CycloneChart.vue?vue&type=style&index=0&id=2d120cea&prod&lang=less&scoped=true","dependencies":[{"path":"D:\\web相关\\small project\\TuBiaoKu-ing\\src\\components\\Chart Library\\02-柱图\\09-蝴蝶柱图\\CycloneChart.vue","mtime":1689758818658},{"path":"D:\\web相关\\small project\\TuBiaoKu-ing\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\web相关\\small project\\TuBiaoKu-ing\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\web相关\\small project\\TuBiaoKu-ing\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\web相关\\small project\\TuBiaoKu-ing\\node_modules\\less-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\web相关\\small project\\TuBiaoKu-ing\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\web相关\\small project\\TuBiaoKu-ing\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQpsaSB7DQogIGxpc3Qtc3R5bGU6IG5vbmU7DQp9DQouY3ljbG9uZV9jaGFydCB7DQogIHBvc2l0aW9uOiByZWxhdGl2ZTsNCiAgLy8gd2lkdGg6IDcwMHB4Ow0KICAvLyBoZWlnaHQ6IDM5MHB4Ow0KICAuVW5pdCB7DQogICAgcG9zaXRpb246IGFic29sdXRlOw0KICAgIGxlZnQ6IDBweDsNCiAgICB0b3A6IDBweDsNCiAgICBkaXNwbGF5OiBmbGV4Ow0KICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBmb250LXNpemU6IDIwcHg7DQogICAgZm9udC1mYW1pbHk6ICdQaW5nRmFuZyBTQyc7DQogICAgY29sb3I6ICNiZmViZmY7DQogIH0NCiAgLmNlbnRlciB7DQogICAgcG9zaXRpb246IGFic29sdXRlOw0KICAgIGxlZnQ6IDUxLjUlOw0KICAgIHRvcDogLTJweDsNCiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7DQogICAgZGlzcGxheTogZmxleDsNCiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47DQogICAgd2lkdGg6IDMwMHB4Ow0KICAgIGZvbnQtZmFtaWx5OiAnUGluZ0ZhbmcgU0MnOw0KICAgIGZvbnQtc2l6ZTogMjRweDsNCiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCAjZmZmLCAjYWJlMWYzKTsNCiAgICAtd2Via2l0LWJhY2tncm91bmQtY2xpcDogdGV4dDsNCiAgICBjb2xvcjogdHJhbnNwYXJlbnQ7DQogIH0NCn0NCg=="},{"version":3,"sources":["CycloneChart.vue"],"names":[],"mappings":";AAqbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CycloneChart.vue","sourceRoot":"src/components/Chart Library/02-柱图/09-蝴蝶柱图","sourcesContent":["<template>\r\n  <div class=\"cyclone_chart\">\r\n    <div :style=\"{ width: width, height: height }\" class=\"bar-chart\" ref=\"chart\"></div>\r\n    <ul class=\"center\">\r\n      <li v-for=\"(item, index) in centerCon\" :key=\"index\">{{ item }}</li>\r\n    </ul>\r\n    <ul class=\"Unit\">\r\n      <li v-for=\"(item, index) in units\" :key=\"index\">单位:{{ item }}</li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts';\r\nexport default {\r\n  props: {\r\n    width: {\r\n      type: String,\r\n      default: () => {\r\n        return '736px';\r\n      },\r\n    },\r\n    height: {\r\n      type: String,\r\n      default: () => {\r\n        return '360px';\r\n      },\r\n    },\r\n    xtype: {\r\n      type: String,\r\n      default: 'category',\r\n    },\r\n    ytype: {\r\n      type: String,\r\n      default: 'value',\r\n    },\r\n    units: {\r\n      type: Array,\r\n      default: () => {\r\n        return ['户', '户'];\r\n      },\r\n    },\r\n    centerCon: {\r\n      type: Array,\r\n      default: () => {\r\n        return ['新办户', '注销户'];\r\n      },\r\n    },\r\n    maxData: {\r\n      type: Number,\r\n      default: 100,\r\n    },\r\n    coloreBarChart: {\r\n      type: Array,\r\n      default: () => {\r\n        return [\r\n          { start: '#FFDF80', end: '#FFD24D' },\r\n          { start: '#00BFFF', end: '#51D3FF' },\r\n        ];\r\n      },\r\n    },\r\n    rowData: {\r\n      type: Array,\r\n      default: () => {\r\n        return [\r\n          { name: '1月', value: 22, item: 23 },\r\n          { name: '2月', value: 32, item: 53 },\r\n          { name: '3月', value: 42, item: 43 },\r\n          { name: '4月', value: 52, item: 33 },\r\n          { name: '5月', value: 32, item: 23 },\r\n        ];\r\n      },\r\n    },\r\n    chartStylr: {\r\n      type: Object,\r\n      default: () => {\r\n        return {\r\n          unit: '单位：人次',\r\n          barWidth: 20,\r\n        };\r\n      },\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      chartInst: null,\r\n      option: {},\r\n      setTime: null,\r\n      setTimeRight: null,\r\n      Xdata: [],\r\n      Ydata: [],\r\n      valTwo: [],\r\n    };\r\n  },\r\n  methods: {\r\n    instantiation() {\r\n      // let timeLineData = [1];\r\n      this.chartInst = echarts.init(this.$refs.chart);\r\n      this.option = {\r\n        baseOption: {\r\n          timeline: {\r\n            show: false,\r\n            top: 0,\r\n            data: [],\r\n          },\r\n          tooltip: {\r\n            trigger: 'axis',\r\n            show: true,\r\n            axisPointer: {\r\n              type: 'cross',\r\n              // animation: true,\r\n              label: {\r\n                backgroundColor: '#6a7985',\r\n              },\r\n            },\r\n          },\r\n          grid: [\r\n            {\r\n              show: false,\r\n              left: '5%',\r\n              top: '10%',\r\n              bottom: '8%',\r\n              containLabel: true,\r\n              width: '37%',\r\n            },\r\n            {\r\n              show: false,\r\n              left: '53%',\r\n              top: '6%',\r\n              bottom: '19%',\r\n              width: '0%',\r\n            },\r\n            {\r\n              show: false,\r\n              right: '2%',\r\n              top: '10%',\r\n              bottom: '8%',\r\n              containLabel: true,\r\n              width: '37%',\r\n            },\r\n          ],\r\n          xAxis: [\r\n            {\r\n              type: 'value',\r\n              inverse: true,\r\n              axisLine: {\r\n                lineStyle: {\r\n                  color: '#BFEBFF',\r\n                  fontSize: 22,\r\n                },\r\n              },\r\n              axisTick: {\r\n                show: false,\r\n              },\r\n              // position: \"bottom\",\r\n              axisLabel: {\r\n                show: true,\r\n                fontSize: 16,\r\n                interval: 0,\r\n                color: '#BFEBFF',\r\n              },\r\n              splitLine: {\r\n                show: false,\r\n              },\r\n              splitArea: {\r\n                show: true,\r\n                areaStyle: {\r\n                  color: ['rgba(255,255,255,0.1)', 'rgba(238,238,238,0)'],\r\n                },\r\n              },\r\n            },\r\n            {\r\n              gridIndex: 1,\r\n              show: false,\r\n            },\r\n            {\r\n              gridIndex: 2,\r\n              axisLine: {\r\n                lineStyle: {\r\n                  color: '#BFEBFF',\r\n                },\r\n              },\r\n              axisTick: {\r\n                show: false,\r\n              },\r\n              position: 'bottom',\r\n              axisLabel: {\r\n                show: true,\r\n                fontSize: 16,\r\n                interval: 0,\r\n                color: '#BFEBFF',\r\n              },\r\n              splitLine: {\r\n                show: false,\r\n              },\r\n              splitArea: {\r\n                show: true,\r\n                areaStyle: {\r\n                  color: ['rgba(255,255,255,0.1)', 'rgba(238,238,238,0)'],\r\n                },\r\n              },\r\n            },\r\n          ],\r\n          yAxis: [\r\n            {\r\n              type: 'category',\r\n              inverse: true,\r\n              position: 'right',\r\n\r\n              axisLine: {\r\n                show: false,\r\n              },\r\n\r\n              axisTick: {\r\n                show: false,\r\n              },\r\n              axisLabel: {\r\n                show: false,\r\n              },\r\n              data: this.Xdata,\r\n            },\r\n            {\r\n              gridIndex: 1,\r\n              type: 'category',\r\n              inverse: true,\r\n              position: 'left',\r\n              nameTextStyle: {\r\n                color: '#BFEBFF',\r\n                fontSize: 22,\r\n                padding: 2,\r\n                fontFamily: 'PingFang SC',\r\n              },\r\n              axisLine: {\r\n                show: false,\r\n              },\r\n              axisTick: {\r\n                show: false,\r\n              },\r\n              axisLabel: {\r\n                show: true,\r\n                padding: [30, 0, 0, 0],\r\n                textStyle: {\r\n                  color: '#ffffff',\r\n                  fontSize: 20,\r\n                },\r\n                align: 'center',\r\n              },\r\n              data: this.Xdata,\r\n            },\r\n            {\r\n              gridIndex: 2,\r\n              type: 'category',\r\n              inverse: true,\r\n              position: 'left',\r\n              axisLine: {\r\n                show: false,\r\n              },\r\n              axisTick: {\r\n                show: false,\r\n              },\r\n              axisLabel: {\r\n                show: false,\r\n              },\r\n              data: this.Xdata,\r\n            },\r\n          ],\r\n          series: [],\r\n        },\r\n        options: [],\r\n      };\r\n      // this.option.baseOption.timeline.data.push(timeLineData[0]);\r\n      this.option.options.push({\r\n        series: [\r\n          {\r\n            name: '2017',\r\n            type: 'bar',\r\n            barWidth: 25,\r\n            itemStyle: {\r\n              normal: {\r\n                color: new echarts.graphic.LinearGradient(0, 0, 1, 0, [\r\n                  {\r\n                    offset: 0,\r\n                    color: this.coloreBarChart[0].start,\r\n                  },\r\n                  {\r\n                    offset: 1,\r\n                    color: this.coloreBarChart[0].end,\r\n                  },\r\n                ]),\r\n              },\r\n              // emphasis: {\r\n              //   color: \"#fe89ff\" // 高亮状态下柱条颜色\r\n              // }\r\n            },\r\n            label: {\r\n              normal: {\r\n                show: false,\r\n              },\r\n            },\r\n            data: this.Ydata,\r\n            animationEasing: 'elasticOut',\r\n          },\r\n          {\r\n            name: '2018',\r\n            type: 'bar',\r\n\r\n            barWidth: this.chartStylr.barWidth,\r\n            xAxisIndex: 2,\r\n            yAxisIndex: 2,\r\n            itemStyle: {\r\n              normal: {\r\n                color: new echarts.graphic.LinearGradient(0, 0, 1, 0, [\r\n                  {\r\n                    offset: 0,\r\n                    color: this.coloreBarChart[1].start,\r\n                  },\r\n                  {\r\n                    offset: 1,\r\n                    color: this.coloreBarChart[1].end,\r\n                  },\r\n                ]),\r\n              },\r\n              // emphasis: {\r\n              //   color: \"#fe89ff\" // 高亮状态下柱条颜色\r\n              // }\r\n            },\r\n            label: {\r\n              normal: {\r\n                show: false,\r\n              },\r\n            },\r\n            data: this.valTwo,\r\n            animationEasing: 'elasticOut',\r\n          },\r\n        ],\r\n      });\r\n\r\n      this.chartInst.setOption(this.option, true);\r\n      //设置默认选中高亮部分\r\n      this.chartInst.dispatchAction({\r\n        type: 'downplay',\r\n        seriesIndex: 0,\r\n        dataIndex: 0,\r\n      }); //鼠标进\r\n    },\r\n    tooltipShuffling() {\r\n      clearInterval(this.setTime);\r\n      var currentIndex = -1;\r\n      this.setTime = setInterval(() => {\r\n        var dataLen = this.Ydata.length;\r\n        // 取消之前高亮的图形\r\n        this.chartInst.dispatchAction({\r\n          type: 'downplay',\r\n          seriesIndex: [0, 1], //表示series中的第几个data数据循环展示\r\n          dataIndex: currentIndex,\r\n        });\r\n        currentIndex = (currentIndex + 1) % dataLen; //+1表示每次跳转一个\r\n        this.chartInst.dispatchAction({\r\n          type: 'showTip',\r\n          seriesIndex: [0],\r\n          dataIndex: currentIndex,\r\n        });\r\n        // 显示 tooltip\r\n        this.chartInst.dispatchAction({\r\n          type: 'highlight',\r\n          seriesIndex: [0, 1],\r\n          dataIndex: currentIndex,\r\n        });\r\n      }, 1000);\r\n    },\r\n    tooltipShufflingright() {\r\n      clearInterval(this.setTimeRight);\r\n      var currentIndex = 1;\r\n      this.setTimeRight = setInterval(() => {\r\n        var dataLen = this.Ydata.length;\r\n        // 取消之前高亮的图形\r\n        this.chartInst.dispatchAction({\r\n          type: 'downplay',\r\n          seriesIndex: 1, //表示series中的第几个data数据循环展示\r\n          dataIndex: currentIndex,\r\n        });\r\n        currentIndex = (currentIndex + 1) % dataLen; //+1表示每次跳转一个\r\n        this.chartInst.dispatchAction({\r\n          type: 'showTip',\r\n          seriesIndex: 1,\r\n          dataIndex: currentIndex,\r\n        });\r\n        // 显示 tooltip\r\n        this.chartInst.dispatchAction({\r\n          type: 'highlight',\r\n          seriesIndex: 1,\r\n          dataIndex: currentIndex,\r\n        });\r\n      }, 1000);\r\n    },\r\n  },\r\n  mounted() {\r\n    if (this.rowData && this.rowData.length > 0) {\r\n      this.Xdata = [];\r\n      this.Ydata = [];\r\n      this.valTwo = [];\r\n      this.rowData.forEach((item) => {\r\n        // .reverse()\r\n        this.Xdata.push(item.name);\r\n        this.Ydata.push(item.value);\r\n        this.valTwo.push(item.item);\r\n      });\r\n    }\r\n    this.instantiation();\r\n    // this.tooltipShuffling();\r\n    // this.tooltipShufflingright();\r\n  },\r\n  beforeDestroy() {\r\n    echarts.init(this.$refs.chart).dispose();\r\n  },\r\n  watch: {\r\n    rowData: {\r\n      handler() {\r\n        this.Xdata = [];\r\n        this.Ydata = [];\r\n        this.valTwo = [];\r\n        this.rowData.forEach((item) => {\r\n          this.Xdata.push(item.name);\r\n          this.Ydata.push(item.value);\r\n          this.valTwo.push(item.item);\r\n        });\r\n        this.instantiation();\r\n        // this.tooltipShuffling();\r\n        // this.tooltipShufflingright();\r\n      },\r\n      deep: true,\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\nli {\r\n  list-style: none;\r\n}\r\n.cyclone_chart {\r\n  position: relative;\r\n  // width: 700px;\r\n  // height: 390px;\r\n  .Unit {\r\n    position: absolute;\r\n    left: 0px;\r\n    top: 0px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n    font-size: 20px;\r\n    font-family: 'PingFang SC';\r\n    color: #bfebff;\r\n  }\r\n  .center {\r\n    position: absolute;\r\n    left: 51.5%;\r\n    top: -2px;\r\n    transform: translateX(-50%);\r\n    display: flex;\r\n    justify-content: space-between;\r\n    width: 300px;\r\n    font-family: 'PingFang SC';\r\n    font-size: 24px;\r\n    background: linear-gradient(to bottom, #fff, #abe1f3);\r\n    -webkit-background-clip: text;\r\n    color: transparent;\r\n  }\r\n}\r\n</style>\r\n"]}]}
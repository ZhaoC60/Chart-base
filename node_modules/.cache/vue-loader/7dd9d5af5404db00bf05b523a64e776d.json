{"remainingRequest":"D:\\web相关\\small project\\github-图表库\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\web相关\\small project\\github-图表库\\src\\components\\Chart Library\\02-柱图\\01-单柱图\\CylindricalPlot.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\web相关\\small project\\github-图表库\\src\\components\\Chart Library\\02-柱图\\01-单柱图\\CylindricalPlot.vue","mtime":1713349147934},{"path":"D:\\web相关\\small project\\github-图表库\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\web相关\\small project\\github-图表库\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\web相关\\small project\\github-图表库\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\web相关\\small project\\github-图表库\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["CylindricalPlot.vue"],"names":[],"mappingsfile":"CylindricalPlot.vue","sourceRoot":"src/components/Chart Library/02-柱图/01-单柱图","sourcesContent":["<template>\r\n  <div class=\"chartBox\">\r\n    <div class=\"myChart\" ref=\"myChart\" :style=\"{ width: width, height: height }\" @mousemove=\"mousemove\" @mouseleave=\"mouseleave\"></div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport * as echarts from 'echarts';\r\nexport default {\r\n  name: 'pieGeRenNanDing',\r\n  props: {\r\n    rowData: {\r\n      type: Array,\r\n      default: () => {\r\n        return ['91', '51', '119', '225', '125'];\r\n      },\r\n    },\r\n    rowData2: {\r\n      type: Array,\r\n      default: () => {\r\n        return ['400', '400', '400', '400', '400'];\r\n      },\r\n    },\r\n    XData: {\r\n      type: Array,\r\n      default: () => {\r\n        return ['A类', 'B类', 'C类', 'D类', 'E类'];\r\n      },\r\n    },\r\n    //\r\n    barColor: {\r\n      type: Array,\r\n      default: () => [\r\n        '#666',\r\n        '#eee',\r\n        '#3e464f',\r\n        '#3e464f',\r\n        'rgba(235, 235, 235,0.1)',\r\n        'rgb(235, 235, 235)',\r\n        'rgba(235, 235, 235,0)',\r\n        'rgb(235, 235, 235)',\r\n        'rgb(235, 235, 235,0.8)',\r\n        'rgb(235, 235, 235,0)',\r\n        'rgb(235, 235, 235,0.8)',\r\n      ],\r\n    },\r\n    unit: {\r\n      type: String,\r\n      default: () => {\r\n        return '件';\r\n      },\r\n    },\r\n    barWidth: {\r\n      type: String,\r\n      default: () => {\r\n        return '22';\r\n      },\r\n    },\r\n    width: {\r\n      type: String,\r\n      default: () => {\r\n        return '736px';\r\n      },\r\n    },\r\n    height: {\r\n      type: String,\r\n      default: () => {\r\n        return '360px';\r\n      },\r\n    },\r\n    fontStyle: {\r\n      type: Object,\r\n      default: () => {\r\n        return {\r\n          Xfont: {\r\n            color: '#f8f8f8',\r\n            fontSize: 16,\r\n            fontFamily: '黑体',\r\n          },\r\n          Yfont: {\r\n            color: '#f8f8f8',\r\n            fontSize: 16,\r\n            fontFamily: 'Helvetica',\r\n          },\r\n          nameTextStyle: {\r\n            color: '#f8f8f8',\r\n            fontSize: 16,\r\n            fontFamily: '黑体',\r\n            padding: 2,\r\n          },\r\n        };\r\n      },\r\n    },\r\n    rotate: {\r\n      type: Number,\r\n      default() {\r\n        return 0;\r\n      },\r\n    },\r\n    provideNumber: { type: Number, default: 2 }, //一行显示几个字\r\n    interval: {\r\n      type: Number,\r\n      default() {\r\n        return 20;\r\n      },\r\n    },\r\n    top: {\r\n      type: String,\r\n      default: '18%',\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      // Xdata: [],\r\n      Ydata: [],\r\n      valTwo: [],\r\n      valThree: [],\r\n      valFour: [],\r\n      setTime: null,\r\n      chartInst: null,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.drawWidth();\r\n    this.tooltipShuffling();\r\n    this.mousemove();\r\n    this.mouseleave();\r\n  },\r\n  methods: {\r\n    drawWidth() {\r\n      let that = this;\r\n      // 基于准备好的dom，初始化echarts实例\r\n      this.chartInst = this.$echarts.init(this.$refs.myChart);\r\n      // var xData2 = [\r\n      //   '容城谷庄',\r\n      //   '雄县七间房',\r\n      //   '安新三台',\r\n      //   '雄县张岗',\r\n      //   '安新寨里'\r\n      // ];\r\n      var data1 = this.rowData;\r\n      var data2 = this.rowData2;\r\n      let _this = this;\r\n      let option = {\r\n        color: '#00BFFF',\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          formatter: function (params) {\r\n            let str;\r\n            console.log(params, 'paramsparams');\r\n            if (params[0].axisValue == 'A类') {\r\n              str = `${params[0].axisValue}：${data1[0]}`;\r\n            } else if (params[0].axisValue == 'B类') {\r\n              str = `${params[0].axisValue}：${data1[1]}`;\r\n            } else if (params[0].axisValue == 'C类') {\r\n              str = `${params[0].axisValue}：${data1[2]}`;\r\n            } else if (params[0].axisValue == 'D类') {\r\n              str = `${params[0].axisValue}：${data1[3]}`;\r\n            } else {\r\n              str = `${params[0].axisValue}：${data1[4]}`;\r\n            }\r\n\r\n            return str;\r\n          },\r\n        },\r\n        grid: {\r\n          left: '2%',\r\n          right: '2%',\r\n          bottom: '3%',\r\n          top: this.top,\r\n          containLabel: true,\r\n        },\r\n        xAxis: [\r\n          {\r\n            type: 'category',\r\n            axisTick: {\r\n              show: false,\r\n            },\r\n            axisLine: {\r\n              lineStyle: {\r\n                color: '#9FAFB5',\r\n                width: 1, //这里是为了突出显示加上的\r\n              },\r\n            },\r\n            axisLabel: {\r\n              //x轴文字的配置\r\n              interval: 0,\r\n              textStyle: this.fontStyle.Xfont,\r\n              rotate: this.rotate,\r\n              formatter: function (params) {\r\n                var newParamsName = '';\r\n                var paramsNameNumber = params.length;\r\n                var provideNumber = that.provideNumber; //一行显示几个字\r\n                var rowNumber = Math.ceil(paramsNameNumber / provideNumber);\r\n                if (paramsNameNumber > provideNumber) {\r\n                  for (var p = 0; p < rowNumber; p++) {\r\n                    var tempStr = '';\r\n                    var start = p * provideNumber;\r\n                    var end = start + provideNumber;\r\n                    if (p == rowNumber - 1) {\r\n                      tempStr = params.substring(start, paramsNameNumber);\r\n                    } else {\r\n                      tempStr = params.substring(start, end) + '\\n';\r\n                    }\r\n                    newParamsName += tempStr;\r\n                  }\r\n                } else {\r\n                  newParamsName = params;\r\n                }\r\n                return newParamsName;\r\n              },\r\n            },\r\n            data: this.XData,\r\n          },\r\n          {\r\n            type: 'category',\r\n            axisLine: {\r\n              show: false,\r\n            },\r\n            axisTick: {\r\n              show: false,\r\n            },\r\n            axisLabel: {\r\n              show: false,\r\n            },\r\n            splitArea: {\r\n              show: false,\r\n            },\r\n            splitLine: {\r\n              show: false,\r\n            },\r\n            data: this.XData,\r\n          },\r\n        ],\r\n        yAxis: [\r\n          {\r\n            name: `单位:${this.unit}`,\r\n            position: 'left',\r\n            type: 'value',\r\n            nameTextStyle: this.fontStyle.nameTextStyle,\r\n            // interval: this.interval,\r\n            axisLabel: {\r\n              //y轴文字的配置\r\n              textStyle: this.fontStyle.Yfont,\r\n            },\r\n            splitNumber: 5,\r\n            // 设置y轴线条的粗细\r\n            splitLine: {\r\n              show: true,\r\n              lineStyle: {\r\n                color: '#0A223E50',\r\n                width: 1,\r\n                type: 'solid',\r\n              },\r\n            },\r\n            axisLine: {\r\n              lineStyle: {\r\n                color: '#9FAFB5',\r\n                width: 2, //这里是为了突出显示加上的\r\n              },\r\n            },\r\n            splitArea: {\r\n              show: true,\r\n              areaStyle: {\r\n                color: ['rgba(191,235,255,.1)', 'rgba(191,235,255,0)'],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            type: 'value',\r\n            show: false,\r\n            name: '单位:%',\r\n            nameTextStyle: {\r\n              color: '#f8f8f8',\r\n              fontFamily: '苹方',\r\n              fontWeight: 'Medium',\r\n              fontSize: 20,\r\n            },\r\n            min: 0,\r\n            max: 100,\r\n            interval: 25,\r\n            splitLine: {\r\n              show: false,\r\n            },\r\n            axisLabel: {\r\n              // formatter: \"{value} %\",\r\n              textStyle: {\r\n                color: '#f8f8f8',\r\n                fontSize: '18',\r\n                fontFamily: 'Helvetica',\r\n              },\r\n            },\r\n          },\r\n        ],\r\n        series: [\r\n          {\r\n            //三个最低下的圆片\r\n            name: '',\r\n            type: 'pictorialBar',\r\n            symbolSize: [22, 11],\r\n            symbolOffset: [0, 5],\r\n            z: 23,\r\n            itemStyle: {\r\n              opacity: 1,\r\n              color: function () {\r\n                return new echarts.graphic.LinearGradient(\r\n                  0,\r\n                  0,\r\n                  0,\r\n                  1,\r\n                  [\r\n                    {\r\n                      offset: 0,\r\n                      color: _this.barColor[0], // 0% 处的颜色\r\n                    },\r\n                    {\r\n                      offset: 1,\r\n                      color: _this.barColor[0], // 100% 处的颜色\r\n                    },\r\n                  ],\r\n                  false\r\n                );\r\n              },\r\n            },\r\n            data: Array(_this.XData.length).fill(1),\r\n          },\r\n          //下半截柱状图\r\n          {\r\n            name: '2020',\r\n            type: 'bar',\r\n            barWidth: 22,\r\n            barGap: '-100%',\r\n            z: 22,\r\n            itemStyle: {\r\n              //lenged文本\r\n              opacity: 0.7,\r\n              color: function () {\r\n                return new echarts.graphic.LinearGradient(\r\n                  0,\r\n                  0,\r\n                  1,\r\n                  0,\r\n                  [\r\n                    {\r\n                      offset: 0,\r\n                      color: _this.barColor[1], // 0% 处的颜色\r\n                    },\r\n                    {\r\n                      offset: 0.5,\r\n                      color: _this.barColor[2], // 0% 处的颜色\r\n                    },\r\n                    {\r\n                      offset: 1,\r\n                      color: _this.barColor[3], // 100% 处的颜色\r\n                    },\r\n                  ],\r\n                  false\r\n                );\r\n              },\r\n            },\r\n\r\n            data: data1,\r\n          },\r\n          {\r\n            // 替代柱状图 默认不显示颜色，是最下方柱图（邮件营销）的value值 - 20\r\n            type: 'bar',\r\n            barWidth: 22,\r\n            barGap: '-100%',\r\n            stack: '广告',\r\n            itemStyle: {\r\n              color: 'transparent',\r\n            },\r\n            data: data1,\r\n          },\r\n          {\r\n            name: '', //头部\r\n            type: 'pictorialBar',\r\n            symbolSize: [22, 11],\r\n            symbolOffset: [0, -5],\r\n            z: 23,\r\n            symbolPosition: 'end',\r\n            itemStyle: {\r\n              color: function () {\r\n                return new echarts.graphic.LinearGradient(\r\n                  0,\r\n                  0,\r\n                  0,\r\n                  1,\r\n                  [\r\n                    {\r\n                      offset: 0,\r\n                      color: _this.barColor[4],\r\n                      // 0% 处的颜色\r\n                    },\r\n                    {\r\n                      offset: 1,\r\n                      color: _this.barColor[5],\r\n                      // 100% 处的颜色\r\n                    },\r\n                  ],\r\n                  false\r\n                );\r\n              },\r\n              opacity: 1,\r\n            },\r\n            data: data2,\r\n          },\r\n          {\r\n            name: '',\r\n            type: 'pictorialBar',\r\n            symbolSize: [22, 11],\r\n            symbolOffset: [0, -5],\r\n            z: 23,\r\n            itemStyle: {\r\n              opacity: 1,\r\n              color: function () {\r\n                return new echarts.graphic.LinearGradient(\r\n                  0,\r\n                  0,\r\n                  0,\r\n                  1,\r\n                  [\r\n                    {\r\n                      offset: 0,\r\n                      color: _this.barColor[6],\r\n                      // 0% 处的颜色\r\n                    },\r\n                    {\r\n                      offset: 1,\r\n                      color: _this.barColor[7],\r\n                      // 100% 处的颜色\r\n                    },\r\n                  ],\r\n                  false\r\n                );\r\n              },\r\n            },\r\n            symbolPosition: 'end',\r\n            data: data1,\r\n          },\r\n          {\r\n            name: '2019',\r\n            type: 'bar',\r\n            barWidth: 22,\r\n            barGap: '-100%',\r\n            z: 2,\r\n            itemStyle: {\r\n              color: function () {\r\n                return new echarts.graphic.LinearGradient(\r\n                  0,\r\n                  0,\r\n                  1,\r\n                  0,\r\n                  [\r\n                    {\r\n                      offset: 0,\r\n                      color: _this.barColor[8],\r\n                      // 0% 处的颜色\r\n                    },\r\n                    {\r\n                      offset: 0.5,\r\n                      color: _this.barColor[9],\r\n                      // 0% 处的颜色\r\n                    },\r\n                    {\r\n                      offset: 1,\r\n                      color: _this.barColor[10],\r\n                      // 100% 处的颜色\r\n                    },\r\n                  ],\r\n                  false\r\n                );\r\n              },\r\n              opacity: 0.7,\r\n            },\r\n            data: data2,\r\n          },\r\n        ],\r\n      };\r\n      this.chartInst.setOption(option);\r\n      //设置默认选中高亮部分\r\n      this.chartInst.dispatchAction({\r\n        type: 'downplay',\r\n        seriesIndex: 0,\r\n        dataIndex: 0,\r\n      }); //鼠标进\r\n    },\r\n    tooltipShuffling() {\r\n      clearInterval(this.setTime);\r\n      var currentIndex = -1;\r\n      this.setTime = setInterval(() => {\r\n        var dataLen = this.Ydata.length;\r\n        // 取消之前高亮的图形\r\n        this.chartInst.dispatchAction({\r\n          type: 'downplay',\r\n          seriesIndex: 0, //表示series中的第几个data数据循环展示\r\n          dataIndex: currentIndex,\r\n        });\r\n        currentIndex = (currentIndex + 1) % dataLen; //+1表示每次跳转一个\r\n        this.chartInst.dispatchAction({\r\n          type: 'showTip',\r\n          seriesIndex: 0,\r\n          dataIndex: currentIndex,\r\n        });\r\n        // 显示 tooltip\r\n        this.chartInst.dispatchAction({\r\n          type: 'showTip',\r\n          seriesIndex: 0,\r\n          dataIndex: currentIndex,\r\n        });\r\n      }, 1000);\r\n    },\r\n    mousemove() {\r\n      clearInterval(this.setTime);\r\n    },\r\n    mouseleave() {\r\n      var currentIndex = -1;\r\n      this.setTime = setInterval(() => {\r\n        var dataLen = this.Ydata.length;\r\n        // 取消之前高亮的图形\r\n        this.chartInst.dispatchAction({\r\n          type: 'downplay',\r\n          seriesIndex: 0, //表示series中的第几个data数据循环展示\r\n          dataIndex: currentIndex,\r\n        });\r\n        currentIndex = (currentIndex + 1) % dataLen; //+1表示每次跳转一个\r\n        this.chartInst.dispatchAction({\r\n          type: 'showTip',\r\n          seriesIndex: 0,\r\n          dataIndex: currentIndex,\r\n        });\r\n        // 显示 tooltip\r\n        this.chartInst.dispatchAction({\r\n          type: 'showTip',\r\n          seriesIndex: 0,\r\n          dataIndex: currentIndex,\r\n        });\r\n      }, 1000);\r\n    },\r\n  },\r\n  beforeDestroy() {\r\n    clearInterval(this.setTime);\r\n  },\r\n  watch: {\r\n    rowData: {\r\n      handler() {\r\n        this.tooltipShuffling();\r\n        this.drawWidth();\r\n      },\r\n      deep: true,\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.chartBox {\r\n  position: relative;\r\n}\r\n</style>\r\n"]}]}
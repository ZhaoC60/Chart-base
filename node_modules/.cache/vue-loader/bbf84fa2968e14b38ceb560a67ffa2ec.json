{"remainingRequest":"D:\\web相关\\small project\\TuBiaoKu-ing\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\web相关\\small project\\TuBiaoKu-ing\\src\\components\\Chart Library\\01-折线图\\02-单折现面积图\\ChartLineArea.vue?vue&type=style&index=0&id=312e929c&prod&lang=less&scoped=true","dependencies":[{"path":"D:\\web相关\\small project\\TuBiaoKu-ing\\src\\components\\Chart Library\\01-折线图\\02-单折现面积图\\ChartLineArea.vue","mtime":1693564961699},{"path":"D:\\web相关\\small project\\TuBiaoKu-ing\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\web相关\\small project\\TuBiaoKu-ing\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\web相关\\small project\\TuBiaoKu-ing\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\web相关\\small project\\TuBiaoKu-ing\\node_modules\\less-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\web相关\\small project\\TuBiaoKu-ing\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\web相关\\small project\\TuBiaoKu-ing\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouY2hhcnRCb3ggew0KICBwb3NpdGlvbjogcmVsYXRpdmU7DQogIC5sZWd0aCB7DQogICAgcG9zaXRpb246IGFic29sdXRlOw0KICAgIGxlZnQ6IDMyMXB4Ow0KICAgIHRvcDogMTBweDsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBsaSB7DQogICAgICBmbG9hdDogbGVmdDsNCiAgICAgIC8vIHdpZHRoOiAyMDBweDsNCiAgICAgIG1hcmdpbi1yaWdodDogMjBweDsNCiAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7DQogICAgICBoZWlnaHQ6IDIwcHg7DQogICAgICBoMyB7DQogICAgICAgIGZsb2F0OiBsZWZ0Ow0KICAgICAgICB3aWR0aDogMjBweDsNCiAgICAgICAgaGVpZ2h0OiA3cHg7DQogICAgICAgIG1hcmdpbi10b3A6IDhweDsNCiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmVkOw0KICAgICAgfQ0KICAgICAgc3BhbiB7DQogICAgICAgIG1hcmdpbi1sZWZ0OiA3cHg7DQogICAgICAgIGZvbnQtc2l6ZTogMTZweDsNCiAgICAgICAgZm9udC1mYW1pbHk6ICdQaW5nRmFuZyc7DQogICAgICAgIGNvbG9yOiAjYmZlYmZmOw0KICAgICAgfQ0KICAgIH0NCiAgfQ0KfQ0K"},{"version":3,"sources":["ChartLineArea.vue"],"names":[],"mappings":";AA0XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ChartLineArea.vue","sourceRoot":"src/components/Chart Library/01-折线图/02-单折现面积图","sourcesContent":["<template>\r\n  <div class=\"chartBox\">\r\n    <div class=\"myChart\" ref=\"myChart\" :style=\"{ width: width, height: height }\"></div>\r\n    <ul class=\"legth\" :style=\"{ top: legTop, left: legLeft }\" v-if=\"legIsShow\">\r\n      <li v-for=\"(item, i) in legendthWZ\" :key=\"i\">\r\n        <h3 :style=\"{ backgroundColor: legendColor[i] }\"></h3>\r\n        <span>{{ item }}</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: 'pieGeRenNanDing',\r\n  props: {\r\n    rowData: {\r\n      type: Array,\r\n      default: () => {\r\n        return [\r\n          {\r\n            name: '00:00',\r\n            value: 90,\r\n            item: 10,\r\n          },\r\n          {\r\n            name: '02:00',\r\n            value: 150,\r\n            item: 20,\r\n          },\r\n          {\r\n            name: '04:00',\r\n            value: 130,\r\n            item: 120,\r\n          },\r\n          {\r\n            name: '04:00',\r\n            value: 130,\r\n            item: 130,\r\n          },\r\n          {\r\n            name: '04:00',\r\n            value: 120,\r\n            item: 140,\r\n          },\r\n          {\r\n            name: '06:00',\r\n            value: 100,\r\n            item: 150,\r\n          },\r\n          {\r\n            name: '08:00',\r\n            value: 80,\r\n            item: 110,\r\n          },\r\n          {\r\n            name: '10:00',\r\n            value: 80,\r\n            item: 160,\r\n          },\r\n          {\r\n            name: '12:00',\r\n            value: 70,\r\n            item: 191,\r\n          },\r\n          {\r\n            name: '14:00',\r\n            value: 90,\r\n            item: 182,\r\n          },\r\n          {\r\n            name: '16:00',\r\n            value: 100,\r\n            item: 170,\r\n          },\r\n          {\r\n            name: '18:00',\r\n            value: 130,\r\n            item: 160,\r\n          },\r\n          {\r\n            name: '20:00',\r\n            value: 120,\r\n            item: 150,\r\n          },\r\n          {\r\n            name: '22:00',\r\n            value: 110,\r\n            item: 140,\r\n          },\r\n        ];\r\n      },\r\n    },\r\n    symbolSize: {\r\n      type: [String, Number],\r\n      default: () => {\r\n        return 5;\r\n      },\r\n    },\r\n    lineColor: {\r\n      type: Array,\r\n      default: () => {\r\n        return ['#F496AA', '#89AAFF'];\r\n      },\r\n    },\r\n    legendColor: {\r\n      type: Array,\r\n      default: () => {\r\n        return ['#F496AA'];\r\n      },\r\n    },\r\n    legendthWZ: {\r\n      type: Array,\r\n      default: () => {\r\n        return ['A'];\r\n      },\r\n    },\r\n    unit: {\r\n      type: String,\r\n      default: () => {\r\n        return '%';\r\n      },\r\n    },\r\n    width: {\r\n      type: String,\r\n      default: () => {\r\n        return '600px';\r\n      },\r\n    },\r\n    height: {\r\n      type: String,\r\n      default: () => {\r\n        return '360px';\r\n      },\r\n    },\r\n    legTop: {\r\n      type: String,\r\n      default: () => {\r\n        return '10px';\r\n      },\r\n    },\r\n    legLeft: {\r\n      type: String,\r\n      default: () => {\r\n        return '450px';\r\n      },\r\n    },\r\n    legIsShow: {\r\n      type: Boolean,\r\n      default: () => {\r\n        return true;\r\n      },\r\n    },\r\n    fontStyle: {\r\n      type: Object,\r\n      default: () => {\r\n        return {\r\n          Xfont: {\r\n            // x轴\r\n            color: '#BFEBFF',\r\n            fontSize: 14,\r\n            fontFamily: 'PingFang',\r\n          },\r\n          Yfont: {\r\n            // y轴\r\n            color: '#BFEBFF',\r\n            fontSize: 14,\r\n            fontFamily: 'Helvetica',\r\n          },\r\n          nameTextStyle: {\r\n            // 单位\r\n            color: '#BFEBFF',\r\n            fontSize: 16,\r\n            padding: 2,\r\n            fontFamily: 'PingFang',\r\n          },\r\n        };\r\n      },\r\n    },\r\n    top: {\r\n      type: String,\r\n      default: () => {\r\n        return '15%';\r\n      },\r\n    },\r\n    left: {\r\n      type: String,\r\n      default: () => {\r\n        return '2%';\r\n      },\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      Xdata: [],\r\n      Ydata: [],\r\n      valTwo: [],\r\n      setTime: null,\r\n      chartInst: null,\r\n    };\r\n  },\r\n  mounted() {\r\n    // this.getData();\r\n    if (this.rowData && this.rowData.length > 0) {\r\n      this.rowData.forEach((item) => {\r\n        this.Xdata.push(item.name);\r\n        this.Ydata.push(item.value);\r\n        this.valTwo.push(item.item);\r\n      });\r\n    }\r\n    this.drawWidth();\r\n    this.tooltipShuffling();\r\n  },\r\n  methods: {\r\n    drawWidth() {\r\n      // 基于准备好的dom，初始化echarts实例\r\n      this.chartInst = this.$echarts.init(this.$refs.myChart);\r\n      this.chartInst.setOption({\r\n        color: this.lineColor[0],\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'cross',\r\n            label: {\r\n              backgroundColor: '#6a7985',\r\n            },\r\n          },\r\n        },\r\n        grid: {\r\n          top: this.top,\r\n          left: this.left,\r\n          right: '3%',\r\n          bottom: '0%',\r\n          containLabel: true,\r\n        },\r\n        xAxis: [\r\n          {\r\n            boundaryGap: false,\r\n            type: 'category',\r\n            data: this.Xdata,\r\n            axisTick: {\r\n              alignWithLabel: true,\r\n            },\r\n            axisLabel: {\r\n              //x轴文字的配置\r\n              textStyle: this.fontStyle.Xfont,\r\n            },\r\n            axisLine: {\r\n              lineStyle: {\r\n                color: '#9FAFB5',\r\n                width: 1.2, //这里是为了突出显示加上的\r\n              },\r\n            },\r\n          },\r\n        ],\r\n        yAxis: [\r\n          {\r\n            name: '单位:' + this.unit,\r\n            position: 'left',\r\n            type: 'value',\r\n            nameTextStyle: this.fontStyle.nameTextStyle,\r\n            axisLabel: {\r\n              //y轴文字的配置\r\n              textStyle: this.fontStyle.Yfont,\r\n            },\r\n            splitNumber: 4,\r\n            // 设置y轴线条的粗细\r\n            splitLine: {\r\n              show: false,\r\n              lineStyle: {\r\n                color: ['#0A223E'],\r\n                width: 2,\r\n                type: 'solid',\r\n              },\r\n            },\r\n            axisLine: {\r\n              lineStyle: {\r\n                color: '#9FAFB5',\r\n                width: 3, //这里是为了突出显示加上的\r\n              },\r\n            },\r\n            splitArea: {\r\n              show: true,\r\n              areaStyle: {\r\n                // color: [\"rgba(14,29,52,0.5)\", \"rgba(191,235,255,0.1)\"]\r\n                color: ['transparent', 'rgba(238,238,238,.1)'],\r\n              },\r\n            },\r\n          },\r\n        ],\r\n        series: [\r\n          {\r\n            type: 'line',\r\n            data: this.Ydata,\r\n            symbolSize: this.symbolSize,\r\n            // symbolSize: 5,\r\n\r\n            areaStyle: {\r\n              normal: {\r\n                lineStyle: {\r\n                  width: 30,\r\n                  type: 'solid',\r\n                  shadowColor: 'rgba(0,0,0,0)', //默认透明\r\n                  shadowBlur: 5,\r\n                  shadowOffsetX: 3,\r\n                  shadowOffsetY: 3,\r\n                },\r\n                color: new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                  {\r\n                    offset: 0,\r\n                    color: this.lineColor[0],\r\n                  },\r\n                  {\r\n                    offset: 1,\r\n                    color: this.lineColor[1],\r\n                  },\r\n                ]),\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      });\r\n      //设置默认选中高亮部分\r\n      this.chartInst.dispatchAction({\r\n        type: 'downplay',\r\n        seriesIndex: 0,\r\n        dataIndex: 0,\r\n      }); //鼠标进\r\n    },\r\n    tooltipShuffling() {\r\n      clearInterval(this.setTime);\r\n      var currentIndex = -1;\r\n      this.setTime = setInterval(() => {\r\n        var dataLen = this.Ydata.length;\r\n        // 取消之前高亮的图形\r\n        this.chartInst.dispatchAction({\r\n          type: 'downplay',\r\n          seriesIndex: 0, //表示series中的第几个data数据循环展示\r\n          dataIndex: currentIndex,\r\n        });\r\n        currentIndex = (currentIndex + 1) % dataLen; //+1表示每次跳转一个\r\n        this.chartInst.dispatchAction({\r\n          type: 'showTip',\r\n          seriesIndex: 0,\r\n          dataIndex: currentIndex,\r\n        });\r\n        // 显示 tooltip\r\n        this.chartInst.dispatchAction({\r\n          type: 'showTip',\r\n          seriesIndex: 0,\r\n          dataIndex: currentIndex,\r\n        });\r\n      }, 1000);\r\n    },\r\n  },\r\n  beforeDestroy() {\r\n    clearInterval(this.setTime);\r\n  },\r\n  watch: {\r\n    rowData: {\r\n      handler() {\r\n        this.Xdata = [];\r\n        this.Ydata = [];\r\n        this.valTwo = [];\r\n        this.rowData.forEach((item) => {\r\n          this.Xdata.push(item.name);\r\n          this.Ydata.push(item.value);\r\n          this.valTwo.push(item.item);\r\n        });\r\n        this.chartInst.dispose();\r\n        this.drawWidth();\r\n        this.tooltipShuffling();\r\n      },\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.chartBox {\r\n  position: relative;\r\n  .legth {\r\n    position: absolute;\r\n    left: 321px;\r\n    top: 10px;\r\n    width: 100%;\r\n    li {\r\n      float: left;\r\n      // width: 200px;\r\n      margin-right: 20px;\r\n      list-style: none;\r\n      height: 20px;\r\n      h3 {\r\n        float: left;\r\n        width: 20px;\r\n        height: 7px;\r\n        margin-top: 8px;\r\n        background-color: red;\r\n      }\r\n      span {\r\n        margin-left: 7px;\r\n        font-size: 16px;\r\n        font-family: 'PingFang';\r\n        color: #bfebff;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]}]}